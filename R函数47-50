Pearson相关系数
Spearman相关系数
Kendall相关系数
偏相关系数
多分格相关系数 polychoric
多系列相关系数 polyserial

?cor
它可以计算Pearson Spearman Kendall

head(state.x77)
           Population Income Illiteracy Life Exp Murder HS Grad Frost   Area
Alabama          3615   3624        2.1    69.05   15.1    41.3    20  50708
Alaska            365   6315        1.5    69.31   11.3    66.7   152 566432
Arizona          2212   4530        1.8    70.55    7.8    58.1    15 113417
Arkansas         2110   3378        1.9    70.66   10.1    39.9    65  51945
California      21198   5114        1.1    71.71   10.3    62.6    20 156361
Colorado         2541   4884        0.7    72.06    6.8    63.9   166 103766

class(state.x77)
[1] "matrix" "array" 

cor(state.x77)
            Population     Income  Illiteracy    Life Exp     Murder     HS Grad      Frost        Area
Population  1.00000000  0.2082276  0.10762237 -0.06805195  0.3436428 -0.09848975 -0.3321525  0.02254384
Income      0.20822756  1.0000000 -0.43707519  0.34025534 -0.2300776  0.61993232  0.2262822  0.36331544
Illiteracy  0.10762237 -0.4370752  1.00000000 -0.58847793  0.7029752 -0.65718861 -0.6719470  0.07726113
Life Exp   -0.06805195  0.3402553 -0.58847793  1.00000000 -0.7808458  0.58221620  0.2620680 -0.10733194
Murder      0.34364275 -0.2300776  0.70297520 -0.78084575  1.0000000 -0.48797102 -0.5388834  0.22839021
HS Grad    -0.09848975  0.6199323 -0.65718861  0.58221620 -0.4879710  1.00000000  0.3667797  0.33354187
Frost      -0.33215245  0.2262822 -0.67194697  0.26206801 -0.5388834  0.36677970  1.0000000  0.05922910
Area        0.02254384  0.3633154  0.07726113 -0.10733194  0.2283902  0.33354187  0.0592291  1.00000000

?cov 计算协方差
 cov(state.x77)
              Population        Income   Illiteracy      Life Exp       Murder       HS Grad        Frost
Population 19931683.7588   571229.7796  292.8679592 -4.078425e+02  5663.523714  -3551.509551 -77081.97265
Income       571229.7796   377573.3061 -163.7020408  2.806632e+02  -521.894286   3076.768980   7227.60408
Illiteracy      292.8680     -163.7020    0.3715306 -4.815122e-01     1.581776     -3.235469    -21.29000
Life Exp       -407.8425      280.6632   -0.4815122  1.802020e+00    -3.869480      6.312685     18.28678
Murder         5663.5237     -521.8943    1.5817755 -3.869480e+00    13.627465    -14.549616   -103.40600
HS Grad       -3551.5096     3076.7690   -3.2354694  6.312685e+00   -14.549616     65.237894    153.99216
Frost        -77081.9727     7227.6041  -21.2900000  1.828678e+01  -103.406000    153.992163   2702.00857
Area        8587916.9494 19049013.7510 4018.3371429 -1.229410e+04 71940.429959 229873.192816 262703.89306
                    Area
Population  8.587917e+06
Income      1.904901e+07
Illiteracy  4.018337e+03
Life Exp   -1.229410e+04
Murder      7.194043e+04
HS Grad     2.298732e+05
Frost       2.627039e+05
Area        7.280748e+09

x <- state.x77[,c(1,2,3,6)]
> y <- state.x77[,c(4,5)]
> head(x)
           Population Income Illiteracy HS Grad
Alabama          3615   3624        2.1    41.3
Alaska            365   6315        1.5    66.7
Arizona          2212   4530        1.8    58.1
Arkansas         2110   3378        1.9    39.9
California      21198   5114        1.1    62.6
Colorado         2541   4884        0.7    63.9
> head(y)
           Life Exp Murder
Alabama       69.05   15.1
Alaska        69.31   11.3
Arizona       70.55    7.8
Arkansas      70.66   10.1
California    71.71   10.3
Colorado      72.06    6.8

cor(x,y)
              Life Exp     Murder
Population -0.06805195  0.3436428
Income      0.34025534 -0.2300776
Illiteracy -0.58847793  0.7029752
HS Grad     0.58221620 -0.4879710
> cov(x,y)
               Life Exp      Murder
Population -407.8424612 5663.523714
Income      280.6631837 -521.894286
Illiteracy   -0.4815122    1.581776
HS Grad       6.3126849  -14.549616

计算偏相关系数
安装 ggm包
使用pcor函数

library(ggm)
> colnames(state.x77)
[1] "Population" "Income"     "Illiteracy" "Life Exp"   "Murder"     "HS Grad"    "Frost"      "Area"      
> pcor(c(1,5,2,3,6),cor(state.x77))
[1] 0.3462724

cor.test(state.x77[,3],state.x77[,5])

	Pearson's product-moment correlation

data:  state.x77[, 3] and state.x77[, 5]
t = 6.8479, df = 48, p-value = 1.258e-08
alternative hypothesis: true correlation is not equal to 0
95 percent confidence interval:（置信区间）
 0.5279280 0.8207295
sample estimates:
      cor 
0.7029752 

library(psych)
> corr.test(state.x77)
Call:corr.test(x = state.x77)
Correlation matrix 
           Population Income Illiteracy Life Exp Murder HS Grad Frost  Area
Population       1.00   0.21       0.11    -0.07   0.34   -0.10 -0.33  0.02
Income           0.21   1.00      -0.44     0.34  -0.23    0.62  0.23  0.36
Illiteracy       0.11  -0.44       1.00    -0.59   0.70   -0.66 -0.67  0.08
Life Exp        -0.07   0.34      -0.59     1.00  -0.78    0.58  0.26 -0.11
Murder           0.34  -0.23       0.70    -0.78   1.00   -0.49 -0.54  0.23
HS Grad         -0.10   0.62      -0.66     0.58  -0.49    1.00  0.37  0.33
Frost           -0.33   0.23      -0.67     0.26  -0.54    0.37  1.00  0.06
Area             0.02   0.36       0.08    -0.11   0.23    0.33  0.06  1.00
Sample Size 
[1] 50
Probability values (Entries above the diagonal are adjusted for multiple tests.) 
           Population Income Illiteracy Life Exp Murder HS Grad Frost Area
Population       0.00   1.00       1.00     1.00   0.23    1.00  0.25 1.00
Income           0.15   0.00       0.03     0.23   1.00    0.00  1.00 0.16
Illiteracy       0.46   0.00       0.00     0.00   0.00    0.00  0.00 1.00
Life Exp         0.64   0.02       0.00     0.00   0.00    0.00  0.79 1.00
Murder           0.01   0.11       0.00     0.00   0.00    0.01  0.00 1.00
HS Grad          0.50   0.00       0.00     0.00   0.00    0.00  0.16 0.25
Frost            0.02   0.11       0.00     0.07   0.00    0.01  0.00 1.00
Area             0.88   0.01       0.59     0.46   0.11    0.02  0.68 0.00

 To see confidence intervals of the correlations, print with the short=FALSE option


?pcor.test
 
 r	
a partial correlation coefficient, computed by pcor.

q	
the number of variables in the conditioning set.集中变量的数量

n	
integer > 0, the sample size.

Value
tval	
The Student's t-test statistic.

df	
The degrees of freedom

pvalue	
The P-value, assuming a two-sided alternative.

r
偏相关系数用por计算的偏相关系数

问
条件集中变量的数量。

n
整数> 0，样本大小。

价值
tval
学生的t检验统计量。

df
自由度

pvalue
p值，假设两边都是。
 
 x <- pcor(c(1,5,2,3,6),cor(state.x77))
> x
[1] 0.3462724
> pcor.test(x,3,50)  
#三个参数分别是：待计算的偏相关系数、3个。。、美国的50个州
#偏相关系数，需要控制的变量，样本数
$tval
[1] 2.476049

$df
[1] 45

$pvalue
[1] 0.01711252


T检验：
?t.test


绘图函数。
1.基础绘图函数
2.lattice包
3.ggplot2包
4.grid包

ls("package:graphics")  可以得到87个绘图包
demo(graphics) 可以看见各种图的小样
help(package="graphics")

散点图：x y两个坐标轴
直方图：因子
热力图：数据矩阵

plot是最复杂的函数
?plot

plot(women)
plot(women$weight,women$height)
以上两个是散点图，下面的是直方图（转换成了因子类型）
plot(as.factor(women$height))

plot(as.factor(mtcars$cyl))

箱线图
plot(as.factor(mtcars$cyl),mtcars$carb)
反过来就是散点图
plot(mtcars$carb,as.factor(mtcars$cyl))
两者都是因子就是脊柱图
plot(as.factor(mtcars$carb),as.factor(mtcars$cyl))

fit <- lm(height~weight,data=women)
> plot(fit) #生成四幅图
按<Return>键来看下一个图: 
按<Return>键来看下一个图: 
按<Return>键来看下一个图: 
按<Return>键来看下一个图:

S3系统
面向对象编程。

属性 泛型函数 方法
methods(plot)
 [1] plot.acf*           plot.data.frame*   
 [3] plot.decomposed.ts* plot.default       
 [5] plot.dendrogram*    plot.density*      
 [7] plot.ecdf           plot.factor*       
 [9] plot.formula*       plot.function      
[11] plot.hclust*        plot.histogram*    
[13] plot.HoltWinters*   plot.isoreg*       
[15] plot.lm*            plot.medpolish*    
[17] plot.mlm*           plot.ppr*          
[19] plot.prcomp*        plot.princomp*     
[21] plot.profile.nls*   plot.R6*           
[23] plot.raster*        plot.spec*         
[25] plot.stepfun        plot.stl*          
[27] plot.table*         plot.ts            
[29] plot.tskernel*      plot.TukeyHSD*     
see '?methods' for accessing help and source code
> methods(print)
methods(summary)
?par #对绘图函数进行设置的 

给条形图加颜色
plot(as.factor(mtcars$cyl),col=c("red","green","blue"))

50.自定义函数
利用自己编的函数加上数据集与文档组合，就可以形成新的R包。
比如输入一个函数不加括号就会显示它的源代码。

函数名称 函数声明 函数参数 函数体
名字必须字母开头的字母和数字组合。
myfun <- function(选项参数)
{
函数体
}

计算偏度和峰度值

偏度：skewness:统计数据分布偏斜方向和程度的度量。统计数据非对称程度的数字特征。
峰度：peakedness:kurtosis. 峰态系数，表征概率密度分布曲线在平均值处特征高低的特征数。


mystats <- function(x,na.omit=FALSE){
+ if(na.omit)
+   x <- x[!is.na(x)]
+ m <- mean(x)
+ n <- length(x)
+ s <- sd(x)
+ skew <- sum((x-m^3/s^3))/n  #偏度
+ kurt <- sum((x-m^4/s^4))/n-3 #峰度
+ return(c(n=m,mean=m,stdev=s,skew=skew,kurtosis=kurt))}
> x <- 1:100
> mystats(x)
       n     mean    stdev     skew kurtosis 
50.50000 50.50000 29.01149 45.22571 38.31910 


循环与向量化操作
函数内部通过循环实现向量化操作。
if 
for
while
switch

for (i in 1:10) {
+ print("Hello World!")    
+ }
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"

i = 1;while (i<=10) {print("Hello World!");i=i+1} #这个辣鸡 写i+=1不可以的
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"

i = 1;while(i<=10){print("Hello World!");i=i+2}
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"
[1] "Hello World!"

score=70;if(score > 60){print("Passed")} else{print("Failed")}
[1] "Passed"
> ifelse(score > 60,print("Passed"),print("failed"))
[1] "Passed"
[1] "Passed"

ifelse(score > 60,"Passed","failed") #这个没写print 因为ifelse自带print功能。
[1] "Passed"













